apply plugin: 'com.github.jxl.plugin.build'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'auto-register'

android {
    compileSdkVersion rootProject.ext.versions.compileSdkVersion

    // 签名配置
    signingConfigs {
        release {
            storeFile file("./keystore/debug.keystore")
        }

        debug {
            storeFile file("./keystore/debug.keystore")
        }
    }

    defaultConfig {
        applicationId rootProject.ext.versions.applicationId
        minSdkVersion rootProject.ext.versions.minSdkVersion
        targetSdkVersion rootProject.ext.versions.targetSdkVersion
        versionCode rootProject.ext.versions.versionCode
        versionName rootProject.ext.versions.versionName

//        javaCompileOptions {
//            annotationProcessorOptions {
//                arguments = [AROUTER_MODULE_NAME: project.getName(), AROUTER_GENERATE_DOC: "enable"]
//            }
//        }

        kapt {
            arguments {
                arg("AROUTER_MODULE_NAME", project.getName())
                arg("AROUTER_GENERATE_DOC", "enable")
            }
        }
    }
    buildTypes {
        release {
            signingConfig signingConfigs.debug
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            signingConfig signingConfigs.debug
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    kapt rootProject.ext.dependencies.arouter_compiler
//    annotationProcessor rootProject.ext.dependencies.arouter_compiler
    implementation project(':component_service')

}

autoregister {
    registerInfo = [
            [
                    'scanInterface'           : 'com.alibaba.android.arouter.facade.template.IRouteRoot'
                    , 'codeInsertToClassName' : 'com.alibaba.android.arouter.core.LogisticsCenter'
                    , 'codeInsertToMethodName': 'loadRouterMap'//static方法
                    , 'registerMethodName'    : 'registerRouteRoot' //static方法
                    , 'include'               : ['com/alibaba/android/arouter/routes/.*']
            ],
            [
                    'scanInterface'           : 'com.alibaba.android.arouter.facade.template.IInterceptorGroup'
                    , 'codeInsertToClassName' : 'com.alibaba.android.arouter.core.LogisticsCenter'
                    , 'codeInsertToMethodName': 'loadRouterMap'//static方法
                    , 'registerMethodName'    : 'registerInterceptor' //static方法
                    , 'include'               : ['com/alibaba/android/arouter/routes/.*']
            ],
            [
                    'scanInterface'           : 'com.alibaba.android.arouter.facade.template.IProviderGroup'
                    , 'codeInsertToClassName' : 'com.alibaba.android.arouter.core.LogisticsCenter'
                    , 'codeInsertToMethodName': 'loadRouterMap'//static方法
                    , 'registerMethodName'    : 'registerProvider' //static方法
                    , 'include'               : ['com/alibaba/android/arouter/routes/.*']
            ]
    ]
}

